
######################LANCEMENT######################
#Pour lancer le bash
./start_docker.bash # if you haven't launched a Docker terminal already
terminator # run this once you're in the Docker container

#NE PAS OUBLIER :
cd catkin_ws/
catkin_make
source devel/setup.bash


######################INFO ROS######################
#Pour voire les topics :
rqt

#Recupération du scan de la zone et calcul du SLAM
rosrun gmapping slam_gmapping

#Lancement du visualisateur de la map
rviz


#Enregistrer la carte générée par gmapping et ses méta-données :
rosrun map_server map_saver map:=gmap
#où gmap est le nom du topic créé par gmapping. Nom décidé dans le launchfile
#génère un fichier map.pgm et map.yaml, enregistrés là où est la console


#Lancement de la simulation
roslaunch minilab_simulation minilab_simulation.launch

#Lancement du node pour le joystick
rosrun joy joy_node 

#Make 
catkin_make

#Lancement de la node voulu
rosrun teleop joystick_node

#Lancement de la node de ROS récupérant les données du joystick
rosrun joy joy_node

#Lancement de rviz
rviz

#Visualiser l'architecture
rqt_graph

######################CONNEXION ROBOT######################
#Brancher la manette avant tout !
#Lancer le terminator
#Connexion au wifi du robot

#Ajouter lignes à la fin de bashrc : $ nano ~/.bashrc  
export ROS_MASTER_URI=http://192.168.0.200:11311
export ROS_IP=192.168.0.102 
-> pas forcement 102 -> voir avec $ ifconfig

#Sourcer !!!
source ~/.bashrc

##Coté robot :
source devel/setup.bash
ssh user@192.168.0.200
(mdp : #user)
roslaunch minilab_launch minilab_driver_hokuyo.launch

######################AUTRE######################
#Lancement SC
sudo code --verbose --user-data-dir --no-sandbox

